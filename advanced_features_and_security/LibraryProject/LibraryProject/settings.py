"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x*7yee0+j0qhv6_h$1_&!o(277=fz8f*3$8i$^s-@pnradbvy2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #local apss
    'bookshelf',
    'relationship_app',
    'csp',
]

AUTH_USER_MODEL = 'bookshelf.CustomUser'


# URL to redirect to when a user is not logged in
LOGIN_URL = '/relationship_app/login/'

# Optional: URL to redirect after login
LOGIN_REDIRECT_URL = '/relationship_app/books/'


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",             # early for header injection
    "csp.middleware.CSPMiddleware",                              # optional: enforces CSP (if installed)
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",                 # protects against CSRF
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# HTTPS / cookie security
SECURE_SSL_REDIRECT = True           # redirect HTTP -> HTTPS (requires working TLS)
SESSION_COOKIE_SECURE = True         # session cookie only over HTTPS
CSRF_COOKIE_SECURE = True            # CSRF cookie only over HTTPS
SESSION_COOKIE_HTTPONLY = True       # not readable from JS
CSRF_COOKIE_HTTPONLY = False         # must be accessible by JS for certain JS frameworks; Django default False

# Browser protections
SECURE_BROWSER_XSS_FILTER = True     # sets X-XSS-Protection header (legacy but useful)
SECURE_CONTENT_TYPE_NOSNIFF = True   # sets X-Content-Type-Options: nosniff
X_FRAME_OPTIONS = "DENY"             # prevents clickjacking

# HSTS - enable only after TLS is correctly set up and tested.
SECURE_HSTS_SECONDS = 31536000       # 1 year; set 0 while testing
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Content Security Policy (CSP) settings using django-csp (recommended).
# If you don't install django-csp, see views.py example to add header manually.
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'",)  # add trusted script hosts as needed
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'")  # try to remove 'unsafe-inline' in prod
CSP_IMG_SRC = ("'self'", "data:")
CSP_FONT_SRC = ("'self'", "data:")
CSP_CONNECT_SRC = ("'self'",)


# Redirect all HTTP requests to HTTPS
SECURE_SSL_REDIRECT = True

# Strict Transport Security (HSTS)
# Instructs browsers to only use HTTPS for 1 year.
# ⚠️ Enable ONLY after confirming HTTPS works properly, otherwise you can lock yourself out.
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Secure cookies: transmitted only over HTTPS
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# HttpOnly: prevent JavaScript from accessing session cookies
SESSION_COOKIE_HTTPONLY = True
# Keep CSRF cookie accessible if needed by JS frameworks; default is False
CSRF_COOKIE_HTTPONLY = False

# Security headers
X_FRAME_OPTIONS = "DENY"             # Protect against clickjacking
SECURE_CONTENT_TYPE_NOSNIFF = True   # Prevent MIME sniffing
# SECURE_BROWSER_XSS_FILTER is deprecated, safe to remove
# SECURE_BROWSER_XSS_FILTER = True

# Logging important security events
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "loggers": {
        "django.security": {"handlers": ["console"], "level": "WARNING"},
        "django.request": {"handlers": ["console"], "level": "ERROR"},
    },
}

# Other settings (databases, staticfiles, templates) remain unchanged below...
# ---------------------------------------------------------------------------

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
